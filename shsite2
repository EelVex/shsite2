#!/usr/bin/env bash

# Wrapper script


# Find and read a config file
for config_file in .shsite2.config $HOME/.shsite2.config $HOME/.shsite2/config /usr/local/etc/shsite2.config
do
	[[ -e $config_file ]] && source $config_file && break
done

declare -x SHS2_PATH SHS2_LIB_PATH SHS2_PARSE_COMMANDS_PATH USER_PARSE_COMMANDS_PATH USER_INC_PATH
: ${SHS2_PATH:=/usr/local/etc/shsite2}
: ${SHS2_LIB_PATH:=$SHS2_PATH/lib}
: ${SHS2_PARSE_COMMANDS_PATH:=$SHS2_PATH/parse_commands}
: ${USER_PARSE_COMMANDS_PATH:=parse_commands}

cmd=$1
shift

case $cmd in
	"blocks") ;&
	"block-put")
		$SHS2_PATH/bin/shsite2_$cmd "$@"
		;;
	"updatedb") ;&
	"info") ;&
	"get-key") ;&
	"parse") 
		$SHS2_PATH/shsite2-$cmd "$@"
		;;
	"parse-commands")
		if [[ "$1" = "-v" ]]; then
			([[ -x $SHS2_PARSE_COMMANDS_PATH/$2 ]] || [[ -x $USER_PARSE_COMMANDS_PATH/$2 ]]) && echo "0"
		else
			parse_cmd=$1; shift
			for path in $USER_PARSE_COMMANDS_PATH $SHS2_PARSE_COMMANDS_PATH; do
				[[ -x $path/$parse_cmd ]] && $path/$parse_cmd "$@" && break
			done
		fi
		;;
	"remake")
		rm -f *.mk
		;&
	"make")
		if [[ -e "Makefile" ]]; then
			make "$@"
		else
			echo "There is no Makefile here."
			echo -e "\nIf this is not the root directory of your site, then go to the root\ndirectory and try 'make' there."
			echo -e "\nIf this is the root directory of your site, then you should install\na Makefile here."
			echo -e "\nShould I install the default Makefile (recommended)?"
			read -p "(Y/n)?" -n 1
			if [[ $REPLY = "Y" ]]; then
				cp $SHS2_PATH/Makefile.sample Makefile
				[[ ! -e makefile.inc ]] && cp $SHS2_PATH/makefile.inc.sample makefile.inc
				echo
				echo "Makefile installed. Now edit makefile.inc to your needs"
			fi
		fi
		;;
	*)
		echo "Commands: get-key | blocks | block-put | parse | [re]make | publish | info | updatedb"
		echo "For info on each command, enter:"
		echo "shsite2 <command>"
		;;
esac
