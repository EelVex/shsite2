#!/usr/bin/env bash

info=$1
file=$2

# info is one of:
# name title path depends fullpathname

[[ -z "$info" ]] || [[ -z "$file" ]] && echo "Usage: info <info> <file>" && exit 2
[[ ! -e "$file" ]] && echo "file '$file' not found" && exit 3

case $info in
	"name") 
		name=$(shsite2 get-key name $file | shsite2 parse $file)
		[[ -z "$name" ]] && name=$(shsite2 get-key filename $file | shsite2 parse $file)
		[[ -z "$name" ]] && { 
			name=${file##*/}
			name=${name/.sl/.html}
		}
		echo "$name"
		;;
	"title") 
		title=$(shsite2 get-key title $file | shsite2 parse $file)
		[[ -z "$title" ]] && title=${file%%.*}
		echo "$title"
		;;
	"path") 
		path=$(shsite2 get-key path $file | shsite2 parse $file)
		[[ -z "$path" ]] && path=$(dirname $file)
		[[ "$path" = "." ]] && path=""
		echo "$path"
		;;
	"fullpathname")
		path=$(shsite2 info path $file)
		name=$(shsite2 info name $file)
		if [[ -z "$path" ]]; then echo "$name"; else echo "$path/$name"; fi
		;;
	"depends") 
		depends=($(shsite2 get-key depends $file | shsite2 parse $file))
		depends+=($(grep -o "%{@[^}]*}%" $file | sed 's/^%{@//;s/}%$//'))
		echo $(for i in "${depends[@]}"; do echo $i;done | sort | uniq | xargs)
		;;
	*)
		echo "<info> should be one of: path, name, fullpathname, title, depends."
		rc=2
		;;
esac


exit $rc
