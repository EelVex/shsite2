#!/usr/bin/env bash

db=$1
shift

[[ -z "$db" ]] && { echo "No db file given" >&2; exit 1; }
(command -v sqlite3 > /dev/null) || { echo "No sqlite3" >&2; exit 0; }


[[ ! -e "$db" ]] && (
	# Create database tables
	echo "Creating database $db" >&2
	sqlite3 $db "create table posts(post_id integer primary key autoincrement, source varchar(255), output_pathname varchar(255) unique, title varchar(255), tags varchar(255), update_timestamp integer, created_timestamp integer)"
	sqlite3 $db "create table tags(tag_id integer primary key autoincrement, tag varchar(255) unique)"
	sqlite3 $db "create table tags_posts(tp_id integer primary key autoincrement, tag_id integer, post_id integer)"
)


# If "--empty" was requested, empty everything
[[ "$1" = "--empty" ]] && shift && (
	# EMPTY posts
	sqlite3 $db "delete from posts"
	# EMPTY tags
	sqlite3 $db "delete from tags"
	# EMPTY tags_posts
	sqlite3 $db "delete from tags_posts"
)

echo -n "Updating DB ..." >&2
for i in $@; do
	# posts table: insert
	# post_id; source; output_pathname; title; tags; update_timestamp; created_timestamp
	[[ -e "$i" ]] || continue
	fullpathname=$(shsite2 info fullpathname $i)
	title=$(shsite2 info title $i)
	tags=$(shsite2 get-key $i tags)
	update=$(date "+%s")
	created=$(date "+%s")
	sqlite3 $db "INSERT OR replace INTO posts(source,output_pathname,title,tags,update_timestamp,created_timestamp)\
		VALUES('$i','$fullpathname','$title','$tags',$update,$created)"
	post_id=$(sqlite3 $db "SELECT post_id FROM posts WHERE output_pathname='$fullpathname'")
	for tag in $tags; do
		# tags table: insert if not exists
		# tag_id; tag
		sqlite3 $db "INSERT OR ignore INTO tags(tag) VALUES('$tag')"
		tag_id=$(sqlite3 $db "SELECT tag_id FROM tags WHERE tag='$tag'")
		# tags_posts table: insert
		# tp_id; tag_id; post_id
		sqlite3 $db "INSERT INTO tags_posts(tag_id,post_id) VALUES($tag_id,$post_id)"
		sleep 0
	done
done
echo " OK" >&2
